service: arbitrage-checker
plugins:
  - serverless-offline
  - serverless-offline-scheduler
  - serverless-offline-sns
  - serverless-plugin-typescript
  - serverless-plugin-optimize

provider:
  name: aws
  runtime: nodejs10.x
  region: eu-west-1
  environment:
    OPPORTUNITY_TABLE: opportunity
    DISPATCH_WITH_COMMON_SYMBOLS_TOPIC: arn:aws:sns:eu-west-1:970227894311:dispatch-with-common-symbols
    ASSESS_ARBITRAGE_OPPORTUNITY_TOPIC: arn:aws:sns:eu-west-1:970227894311:assess-arbitrage-opportunity
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - sns:*
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.OPPORTUNITY_TABLE}"
        - ${self:provider.environment.DISPATCH_WITH_COMMON_SYMBOLS_TOPIC}
        - ${self:provider.environment.ASSESS_ARBITRAGE_OPPORTUNITY_TOPIC}
functions:
  sendExchangePairs:
    handler: index.sendExchangePairs
    events:
      - schedule: rate(1 minute)
  dispatchWithCommonSymbols:
    handler: index.dispatchWithCommonSymbols
    events:
      - sns:
          arn: ${self:provider.environment.DISPATCH_WITH_COMMON_SYMBOLS_TOPIC}
  assess:
    handler: index.assess
    events:
      - sns:
          arn: ${self:provider.environment.ASSESS_ARBITRAGE_OPPORTUNITY_TOPIC}

package:
  include:
    - 'node_modules/core/**'
    - 'node_modules/implementation/**'
    - 'node_modules/aws-sdk/**'
    - 'node_modules/ccxt/**'

resources:
  Resources:
    OpportunityDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.OPPORTUNITY_TABLE}

custom:
  serverless-offline-sns:
    debug: false
